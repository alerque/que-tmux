# : << ENDOFCONF
# ^^ Crazy hack to be able to run conf file as an inline script for some fancy
#    scripting action, shamelessly borrowed from:
#    https://github.com/gpakosz/.tmux/blob/master/.tmux.conf

# Binding to reload config file, useful for tweaking tmux
bind R source ~/.tmux.conf \; display-message "Conf reloaded..."

# Force UT8 on no matter the locale (for iTerm2 vs. remot SSH weiedness on Mac)
set -g default-terminal "tmux-256color"

# Use <CTRL>+a as command prefix
set -g prefix M-a

# Keep all sessions
set-option -g destroy-unattached off

# Number from 1 for easier key bindings
set -g base-index 1
setw -g pane-base-index 1

# Don't listen for extended escape sequences
set -s escape-time 0

# Visual alert to activity in other pane
set -g visual-activity on
setw -g monitor-activity on

# Auto-scroll mode in xterms
set -g xterm-keys on
set -g history-limit 100000
set -g mouse on

# Allow naming panes by term codes
setw -g automatic-rename on
set -g set-titles on

# Renumber panes on closeures
set -g renumber-windows on

# Let different clients have different sizes
setw -g aggressive-resize on

# Enable NeoVIM to see focus events, used by autoread
set-option -g focus-events on

# For nested tmux'es
bind a send-prefix

# Shortcut for window switching
bind M-a last-window
bind -n M-p previous-window
bind -n M-n next-window

# Bindings for Juice SSH (set to send WeeChat next/previous)
bind -n F7 previous-window
bind -n F8 next-window
bind -n F9 new-window -c "#{pane_current_path}"
bind -n F12 send-prefix
bind -n F11 run "tmux split-window -p 40 'zsh -ci fs'"

# Shortcut for session related actions
unbind c
bind c command-prompt "new-session -A -s '%1'"
bind r command-prompt "rename-session %1"

# Switch to a new cloned session linked to the current one
unbind M-c
bind M-c run "cut -c3- ~/.tmux.conf | sh -s clone #S"

# Shortcut for new window using PWD of focused window
unbind n
bind n new-window -c "#{pane_current_path}"

# Send keys to all panes in paralles
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# What do you think this is, emacs?
setw -g mode-keys vi
unbind [
unbind ]
bind Escape copy-mode

# Clipboard integration stuff (Linux only ATM)
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard -in"
bind -T copy-mode-vi Y send-keys -X copy-selection
unbind p
bind p run "xclip -selection clipboard -out | tmux load-buffer - ; tmux paste-buffer"
bind P paste-buffer

# Shortcuts for pane management
bind v split-window -h -c "#{pane_current_path}"
bind V split-window -v -c "#{pane_current_path}"

bind - break-pane
bind + run "tmux split-window -p 20 'zsh -ci jpane'"

bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Smart pane switching with awareness of vim splits ala http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# Original concept from Mislav Marohnić, https://gist.github.com/mislav/5189704
# Simplified code from https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind -n M-o select-pane -t :.+

# Toggle mouse mode on or off
bind m set -g mode-mouse on \; display 'Mouse: ON'
bind M set -g mode-mouse off \; display 'Mouse: OFF'

# Predefined sessions
new-session -s quake teamocil quake
new-session -s scratch teamocil scratch
new-session -s system teamocil system
new-session -s comms teamocil comms
new-session -s drudgery teamocil drudgery

# Status bar settings adapted from powerline
set -g status on
set -g status-interval 10
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],#[fg=colour16]#[bg=colour254]#[bold]} #S #{?client_prefix,#[fg=colour31]#[bg=colour234]#[nobold],#[fg=colour254]#[bg=colour234]#[nobold]}'
set -g status-right '#[fg=colour252,bg=colour233,nobold,noitalics,nounderscore]#[fg=colour16,bg=colour252,bold,noitalics,nounderscore] #h '
set -g status-right-length 10
set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
set -g window-status-last-style fg=colour31
set-window-option -g window-status-style none,fg=colour249
set-window-option -g window-status-activity-style none,fg=yellow
set-window-option -g window-status-bell-style none,fg=red

# Hack Terminfo to force 24 bit color support flags for my favority terminal(s)
set-option -sa terminal-overrides ",tmux-256color:RGB"
set-option -sa terminal-overrides ",alacritty:RGB"
# set-option -sa terminal-overrides ",*:RGB"

# Use FZF for finding windows, sessions, and for pasting file names (from PWD or /)
bind-key w run "tmux split-window -p 40 'zsh -ci ftpane'"
bind-key s run "tmux split-window -p 40 'zsh -ci fs'"
bind-key 'f' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate $PWD| fzf -m | paste -sd\\  -)\"'"
bind-key 'M-f' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# ENDOFCONF
# clone () {
#   orig=${1%-*}
#   let i=$( tmux list-sessions -F '#S' | sed -nE "/^${orig}-[0-9]+$/{s/[^0-9]//g;p}" | tail -n1 )+1
#   copy="$orig-$i"
#   TMUX= tmux new-session -d -t $orig -s $copy
#   tmux switch-client -t $copy
#   tmux set -q -t $copy destroy-unattached on
# }
# $@
# # vim: ft=tmux
