# : << ENDOFCONF
# ^^ Crazy hack to be able to run conf file as an inline script for some fancy
#    scripting action, shamelessly borrowed from:
#    https://github.com/gpakosz/.tmux/blob/master/.tmux.conf

# Binding to reload config file, useful for tweaking tmux
bind-key R source ~/.tmux.conf \; display-message "Conf reloaded..."

# Force UT8 on no matter the locale (for iTerm2 vs. remot SSH weiedness on Mac)
set-option -g default-terminal "tmux-256color"

# Use <CTRL>+a as command prefix
set-option -g prefix M-a

# Keep all sessions
set-option -g destroy-unattached off

# Number from 1 for easier key bindings
set-option -g base-index 1
set-option -wg pane-base-index 1

# Don't listen for extended escape sequences
set-option -s escape-time 0

# Visual alert to activity in other pane
set-option -g visual-activity on
set-option -wg monitor-activity on

# Auto-scroll mode in xterms
set-option -g xterm-keys on
set-option -g history-limit 100000
set-option -g mouse on

# Allow naming panes by term codes
set-option -wg automatic-rename on
set-option -g set-titles on

# Renumber panes on closeures
set-option -g renumber-windows on

# Let different clients have different sizes
set-option -wg aggressive-resize on

# Enable NeoVIM to see focus events, used by autoread
set-option -g focus-events on

# For nested tmux'es
bind-key a send-prefix

# Shortcut for window switching
bind-key M-a last-window
bind-key -n M-p previous-window
bind-key -n M-n next-window

# Bindings for Juice SSH (set to send WeeChat next/previous)
bind-key -n F7 previous-window
bind-key -n F8 next-window
bind-key -n F9 new-window -c "#{pane_current_path}"
bind-key -n F12 send-prefix
bind-key -n F11 split-window -l 5 'zsh -ci fs'

# Shortcut for session related actions
unbind-key c
bind-key c command-prompt "new-session -A -s '%1'"
bind-key r command-prompt "rename-session %1"

# Switch to a new cloned session linked to the current one
unbind-key M-c
bind-key M-c run-shell "cut -c3- ~/.tmux.conf | sh -s clone #S"

# Shortcut for new window using PWD of focused window
unbind-key n
bind-key n new-window -c "#{pane_current_path}"

# Send keys to all panes in paralles
bind-key e set-option -w synchronize-panes on
bind-key E set-option -w synchronize-panes off

# What do you think this is, emacs?
set-option -wg mode-keys vi
unbind-key [
unbind-key ]
bind-key Escape copy-mode

# Clipboard integration stuff (Linux only ATM)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard -in"
bind-key -T copy-mode-vi Y send-keys -X copy-selection
unbind-key p
bind-key p run-shell "xclip -selection clipboard -out | tmux load-buffer - ; tmux paste-buffer"
bind-key P paste-buffer

# Shortcuts for pane management
bind-key v split-window -h -c "#{pane_current_path}"
bind-key V split-window -v -c "#{pane_current_path}"

bind-key - break-pane
bind-key + split-window -l 10 'zsh -ci jpane'

bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Smart pane switching with awareness of vim splits ala http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# Original concept from Mislav Marohnić, https://gist.github.com/mislav/5189704
# Simplified code from https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind-key -n M-\\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -n M-o select-pane -t :.+

# Toggle mouse mode on or off
bind-key m set-option -g mode-mouse on \; display 'Mouse: ON'
bind-key M set-option -g mode-mouse off \; display 'Mouse: OFF'

# Predefined sessions
new-session -s quake teamocil quake
new-session -s scratch teamocil scratch
new-session -s system teamocil system
new-session -s comms teamocil comms
new-session -s drudgery teamocil drudgery

# Status bar settings adapted from powerline
set-option -g status on
set-option -g status-interval 10
set-option -g status-fg colour231
set-option -g status-bg colour234
set-option -g status-left-length 20
set-option -g status-left '#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],#[fg=colour16]#[bg=colour254]#[bold]} #S #{?client_prefix,#[fg=colour31]#[bg=colour234]#[nobold],#[fg=colour254]#[bg=colour234]#[nobold]}'
set-option -g status-right '#[fg=colour252,bg=colour233,nobold,noitalics,nounderscore]#[fg=colour16,bg=colour252,bold,noitalics,nounderscore] #h '
set-option -g status-right-length 10
set-option -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[default]#W "
set-option -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
set-option -g window-status-last-style fg=colour31
set-option -wg window-status-style none,fg=colour249
set-option -wg window-status-activity-style none,fg=yellow
set-option -wg window-status-bell-style none,fg=red

# Hack Terminfo to force 24 bit color support flags for my favority terminal(s)
set-option -sa terminal-overrides ",tmux-256color:RGB"
set-option -sa terminal-overrides ",alacritty:RGB"
# set-option -sa terminal-overrides ",*:RGB"

# Use FZF for finding windows, sessions, and for pasting file names (from PWD or /)
bind-key w split-window -l 10 'zsh -ci ftpane'
bind-key s split-window -l 5 'zsh -ci fs'
# bind-key f split-window -l 20% 'tmux send-keys -t #{pane_id} "$(locate $PWD| fzf -m | paste -sd\\  -)"'
# bind-key M-f split-window -l 20% 'tmux send-keys -t #{pane_id} "$(locate / | fzf -m | paste -sd\\  -)"'

# ENDOFCONF
# clone () {
#   orig=${1%-*}
#   let i=$( tmux list-sessions -F '#S' | sed -nE "/^${orig}-[0-9]+$/{s/[^0-9]//g;p}" | tail -n1 )+1
#   copy="$orig-$i"
#   TMUX= tmux new-session -d -t $orig -s $copy
#   tmux switch-client -t $copy
#   tmux set-option -q -t $copy destroy-unattached on
# }
# $@
# # vim: ft=tmux
